import abc
from typing import Any

from kys_in_rest.core.tg_utils import TgFeature
from kys_in_rest.tg.entities.input_tg_msg import InputTgMsg
from kys_in_rest.tg.features.bot_msg_repo import BotMsgRepo
from kys_in_rest.users.features.check_admin import CheckTgAdmin
from kys_in_rest.wishlist.entities.wishlist_item import WishlistItem


class WishlistRepo(abc.ABC):
    @abc.abstractmethod
    def list_not_received(self) -> list[WishlistItem]: ...

    @abc.abstractmethod
    def list_received(self) -> list[WishlistItem]: ...

    @abc.abstractmethod
    def add(self, name: str) -> WishlistItem: ...

    @abc.abstractmethod
    def mark_as_received(self, name: str) -> WishlistItem | None: ...


class Wishlist(TgFeature):
    def __init__(
        self,
        check_tg_admin: CheckTgAdmin,
        wishlist_repo: WishlistRepo,
        bot_msg_repo: BotMsgRepo,
    ):
        self.check_tg_admin = check_tg_admin
        self.wishlist_repo = wishlist_repo
        self.bot_msg_repo = bot_msg_repo

    async def do_async(self, msg: InputTgMsg) -> None:
        self.check_tg_admin.do(msg.tg_user_id)

        if msg.text:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π —É–¥–∞–ª–µ–Ω–∏—è
            if msg.text.startswith('-'):
                item_name = msg.text[1:].strip()
                if item_name:
                    item = self.wishlist_repo.mark_as_received(item_name)
                    if item:
                        await self.bot_msg_repo.send_text(f"‚úÖ –û—Ç–º–µ—Ç–∏–ª –∫–∞–∫ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ: {item.name}")
                    else:
                        await self.bot_msg_repo.send_text(f"‚ùå –ü—Ä–µ–¥–º–µ—Ç '{item_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∏—à–ª–∏—Å—Ç–µ")

                    await self._show_active_wishlist()
                    await self._show_received()
                    return

            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç –≤ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö (–ø–æ–∏—Å–∫ –ø–æ –Ω–∞—á–∞–ª—É –Ω–∞–∑–≤–∞–Ω–∏—è)
            received_items = self.wishlist_repo.list_received()
            was_in_received = any(wi.name.lower().startswith(msg.text.lower()) for wi in received_items)

            item = self.wishlist_repo.add(msg.text)

            if was_in_received:
                await self.bot_msg_repo.send_text(f"üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö: {item.name}")
            else:
                await self.bot_msg_repo.send_text("–ó–∞–ø–∏—Å–∞–ª üëå")

            await self._show_active_wishlist()
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É –∏ —Ç–µ–∫—É—â–∏–π –≤–∏—à–ª–∏—Å—Ç
        await self.bot_msg_repo.send_text(
            "<i>–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–∏—à–∏ <code>/wishlist –ø—Ä–µ–¥–º–µ—Ç</code>\n</i>"
            "<i>–ß—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –ø–∏—à–∏ <code>/wishlist -–ø—Ä–µ–¥–º–µ—Ç</code></i>"
        )

        await self._show_active_wishlist()
        await self._show_received()

    async def _show_received(self):
        received_items = self.wishlist_repo.list_received()
        if received_items:
            received_items_str = "\n".join(f"‚úÖ {wi.name}" for wi in received_items)
            received_items_str = "<b>–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ:</b>\n" + received_items_str
            await self.bot_msg_repo.send_text(received_items_str)

    async def _show_active_wishlist(self):
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –≤–∏—à–ª–∏—Å—Ç
        wishlist_items = self.wishlist_repo.list_not_received()
        if wishlist_items:
            wishlist_items_str = "\n".join(f"‚Ä¢ {wi.name}" for wi in wishlist_items)
            wishlist_items_str = "<b>–í–∏—à–ª–∏—Å—Ç:</b>\n" + wishlist_items_str
            await self.bot_msg_repo.send_text(wishlist_items_str)
        else:
            await self.bot_msg_repo.send_text("–ê–∫—Ç–∏–≤–Ω—ã–π –≤–∏—à–ª–∏—Å—Ç –ø—É—Å—Ç")
