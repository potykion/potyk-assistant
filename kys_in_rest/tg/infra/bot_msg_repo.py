from typing import List

from telegram import Message, InputMediaAudio, Bot

from kys_in_rest.tg.entities.audio import TgAudio
from kys_in_rest.tg.features.bot_msg_repo import BotMsgRepo


class TgUpdateBotMsgRepo(BotMsgRepo):
    def __init__(self, update: Message):
        self.update = update

    async def send_audio(self, audio: TgAudio) -> None:
        await self.update.reply_audio(
            audio=audio.audio,
            performer=audio.artist,
            title=audio.title,
            thumbnail=audio.cover,
            duration=audio.duration,
            filename=audio.filename,
        )

    async def send_text(self, text: str) -> None:
        await self.update.reply_html(text)

    async def send_photo(self, photo: bytes, caption: str = None) -> None:
        await self.update.reply_photo(
            photo=photo,
            caption=caption,
        )

    async def send_multiple_audio(self, audios: List[TgAudio]) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º"""
        if not audios:
            return
            
        total = len(audios)
        await self.send_text(f"–ù–∞–π–¥–µ–Ω–æ {total} —Ç—Ä–µ–∫–æ–≤. –û—Ç–ø—Ä–∞–≤–ª—è—é...")
        
        for i, audio in enumerate(audios, 1):
            try:
                await self.send_audio(audio)
            except Exception as e:
                await self.send_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {i}/{total}: {str(e)}")
        
        await self.send_text(f"üéµ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {total} —Ç—Ä–µ–∫–æ–≤!")

    async def send_audio_group(self, audios: List[TgAudio]) -> None:
        """–ü—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—É–¥–∏–æ –∫–∞–∫ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É (–º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å)"""
        if not audios:
            return
            
        try:
            # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É –∏–∑ –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤
            media_group = []
            for audio in audios:
                media = InputMediaAudio(
                    media=audio.audio,
                    performer=audio.artist,
                    title=audio.title,
                    thumbnail=audio.cover,
                    duration=audio.duration,
                    filename=audio.filename,
                )
                media_group.append(media)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É
            await self.update.reply_media_group(media=media_group)

        except Exception as e:
            # –ï—Å–ª–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, fallback –Ω–∞ –æ–±—ã—á–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
            await self.send_text("–ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ –æ–¥–Ω–æ–º—É...")
            await self.send_multiple_audio(audios)


class TgBotMsgRepo(BotMsgRepo):
    """–†–µ–∞–ª–∏–∑–∞—Ü–∏—è BotMsgRepo –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ python-telegram-bot"""

    def __init__(self, bot: Bot, chat_ids: List[int]):
        self.bot = bot
        self.chat_ids = chat_ids

    async def send_audio(self, audio: TgAudio) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞—É–¥–∏–æ –≤–æ –≤—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —á–∞—Ç—ã"""
        for chat_id in self.chat_ids:
            try:
                await self.bot.send_audio(
                    chat_id=chat_id,
                    audio=audio.audio,
                    performer=audio.artist,
                    title=audio.title,
                    thumbnail=audio.cover,
                    duration=audio.duration,
                    filename=audio.filename,
                )
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞—É–¥–∏–æ –≤ —á–∞—Ç {chat_id}: {e}")
                raise

    async def send_text(self, text: str) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤–æ –≤—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —á–∞—Ç—ã"""
        for chat_id in self.chat_ids:
            try:
                await self.bot.send_message(
                    chat_id=chat_id,
                    text=text,
                    parse_mode="HTML"
                )
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç {chat_id}: {e}")
                raise

    async def send_photo(self, photo: bytes, caption: str = None) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ –≤–æ –≤—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —á–∞—Ç—ã"""
        for chat_id in self.chat_ids:
            try:
                await self.bot.send_photo(
                    chat_id=chat_id,
                    photo=photo,
                    caption=caption,
                    parse_mode="HTML" if caption else None
                )
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –≤ —á–∞—Ç {chat_id}: {e}")
                raise

    async def send_multiple_audio(self, audios: List[TgAudio]) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –≤–æ –≤—Å–µ —á–∞—Ç—ã"""
        if not audios:
            return

        total = len(audios)
        await self.send_text(f"–ù–∞–π–¥–µ–Ω–æ {total} —Ç—Ä–µ–∫–æ–≤. –û—Ç–ø—Ä–∞–≤–ª—è—é...")

        for i, audio in enumerate(audios, 1):
            try:
                await self.send_audio(audio)
            except Exception as e:
                await self.send_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {i}/{total}: {str(e)}")

        await self.send_text(f"üéµ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {total} —Ç—Ä–µ–∫–æ–≤!")

    async def send_audio_group(self, audios: List[TgAudio]) -> None:
        """–ü—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—É–¥–∏–æ –∫–∞–∫ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É –≤–æ –≤—Å–µ —á–∞—Ç—ã"""
        if not audios:
            return

        try:
            # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É –∏–∑ –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤
            from telegram import InputMediaAudio

            media_group = []
            for audio in audios:
                media = InputMediaAudio(
                    media=audio.audio,
                    performer=audio.artist,
                    title=audio.title,
                    thumbnail=audio.cover,
                    duration=audio.duration,
                    filename=audio.filename,
                )
                media_group.append(media)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É –≤–æ –≤—Å–µ —á–∞—Ç—ã
            for chat_id in self.chat_ids:
                try:
                    await self.bot.send_media_group(
                        chat_id=chat_id,
                        media=media_group
                    )
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã –≤ —á–∞—Ç {chat_id}: {e}")
                    # Fallback –Ω–∞ –æ–±—ã—á–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
                    for audio in audios:
                        await self.bot.send_audio(
                            chat_id=chat_id,
                            audio=audio.audio,
                            performer=audio.artist,
                            title=audio.title,
                            thumbnail=audio.cover,
                            duration=audio.duration,
                            filename=audio.filename,
                        )

        except Exception as e:
            # –ï—Å–ª–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, fallback –Ω–∞ –æ–±—ã—á–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
            await self.send_text("–ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ –æ–¥–Ω–æ–º—É...")
            await self.send_multiple_audio(audios)
